<script type="text/javascript">
/*var maptimes = {
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {
        "name": "MaptimeSF"
      },
      "geometry": {
        "type": "Point",
        "coordinates": [
          -122.41942584514618,
          37.76493060428678
        ]
      }
    },
               {
               "type": "Feature",
               "properties": {
               "name": "Đường: " + "292 Cao Thắng" + "<br>" + "Phường: " + " 12" + "<br>" + "Quận: " + "10" + "<br>" + "Thành Phố: " + "Hồ Chí Minh" + "<br>" + "Giá: 2 tỷ" + "<br>" + "Giá Tối Đa: 3 tỷ" + "<br>" + "Giá Tối Thiểu: 1 tỷ",
               },
               "geometry": {
               "type": "Point",
               "coordinates": [
                               106.673200, 10.774950
                               ]
               }
               },
    {
      "type": "Feature",
      "properties": {
        "name": "Đường: " + "19 Trường Sơn" + "<br>" + "Phường: " + " 15" + "<br>" + "Quận: " + "10" + "<br>" + "Thành Phố: " + "Hồ Chí Minh" + "<br>" + "Giá: 5 tỷ" + "<br>" + "Giá Tối Đa: 9 tỷ" + "<br>" + "Giá Tối Thiểu: 4 tỷ",
      },
      "geometry": {
        "type": "Point",
        "coordinates": [
          106.666250,
          10.785280
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Đường: " + "268 Lý Thường Kiệt" + "<br>" + "Phường: " + " 14" + "<br>" + "Quận: " + "10" + "<br>" + "Thành Phố: " + "Hồ Chí Minh" + "<br>" + "Giá: 2 tỷ" + "<br>" + "Giá Tối Đa: 4 tỷ" + "<br>" + "Giá Tối Thiểu: 2 tỷ",
      },
      "geometry": {
        "type": "Point",
        "coordinates": [
          106.657837,
          10.771730
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {
        "name": "Đường: " + "7A/19 Thành Thái" + "<br>" + "Phường: " + " 14" + "<br>" + "Quận: " + "10" + "<br>" + "Thành Phố: " + "Hồ Chí Minh" + "<br>" + "Giá: 10 tỷ" + "<br>" + "Giá Tối Đa: 12 tỷ" + "<br>" + "Giá Tối Thiểu: 7 tỷ",
      },
      "geometry": {
        "type": "Point",
        "coordinates": [
          106.661949,
          10.770540
        ]
      }
    }
  ]
};*/


var dataSet = [];
var i = 0;
var dataList = {{{ items }}};
/*
dataList.some(function(final1,idx) {
    if (final1["location_lng"] != "" && final1["location_lat"])
      dataSet.push([1+i++,final1["attr_addr_street"], final1["attr_addr_ward"],final1["attr_addr_district"],final1["attr_addr_city"],final1["attr_price"],final1["attr_realestate_type"],final1["attr_price_min"], final1["location_lng"], final1["location_lat"], String(final1["dataBank"]),String(final1["dataHospital"]),String(final1["dataSchool"]),String(final1["dataBus_Stations"]),String(final1["dataMarket"]),String(final1["dataSupermarket"]) ]);
      if (i == 1000)
        return true;
});
*/
/*
dataList = JSON.parse(dataList);
for (var final1 in dataList) {
    //var test1 = JSON.stringify(element);
    //var final1 = JSON.parse(test1);
    dataSet.push([i+1,final1["attr_addr_street"], final1["attr_addr_ward"],final1["attr_addr_district"],final1["attr_addr_city"],final1["attr_price"],final1["attr_realestate_type"],final1["attr_price_min"], final1["location_lng"], final1["location_lat"], final1["dataBank"],final1["dataHospital"],final1["dataSchool"],final1["dataBus_Stations"],final1["dataMarket"], final1["dataSupermarket"] ]);
    i++;
};
*/
dataList.forEach(function(final1) {
    if (final1["location_lng"] != "" && final1["location_lat"])
      dataSet.push([1+i++,final1["attr_addr_street"], final1["attr_addr_ward"],final1["attr_addr_district"],final1["attr_addr_city"],final1["attr_price"],final1["attr_realestate_type"],final1["attr_price_min"], final1["location_lng"], final1["location_lat"], String(final1["dataBank"]),String(final1["dataHospital"]),String(final1["dataSchool"]),String(final1["dataBus_Stations"]),String(final1["dataMarket"]),String(final1["dataSupermarket"]) ]);
});
/*
{{# each items }}
            if ("{{ this.location_lng }}" != "" && "{{ this.location_lat }}" != "")
              dataSet.push([(1+i++),"{{ this.attr_addr_street }}", "{{ this.attr_addr_ward }}","{{ this.attr_addr_district }}","{{ this.attr_addr_city }}","{{ this.attr_price }}","{{ this.attr_realestate_type }}","{{ this.attr_price_min }}", "{{ this.location_lng }}", "{{ this.location_lat }}", "{{{this.dataBank}}}","{{{this.dataHospital}}}","{{{this.dataSchool}}}","{{{this.dataBus_Stations}}}","{{{this.dataMarket}}}", "{{{this.dataSupermarket}}}" ]);
{{/each}}
*/
console.log(dataSet);
// function checkedbutton(){
//   document.getElementsByClassName("num_max")[0].innerHTML = i;
//         var ele = document.getElementsByName('check'); 
//         console.log(ele)
//             for(var n = 0; n < ele.length; n++) { 
//                 console.log(ele[n].checked)
//                 if(ele[n].checked == true){
//                   var result = ele[n].value;
//                 } 
//             }
//             console.log(result)
//         return result;
      
// }


function Myfunction(){
        var num1 = document.getElementsByClassName("num1")[0].innerHTML;
        var num2 = document.getElementsByClassName("num2")[0].innerHTML;
        if (num2 < i){
          num1 = parseInt(num1) + 10;
          num2 = parseInt(num2) + 10;
        }
        
        if (num2 > i){
          num2 = i-1;
          i--;
        }

        document.getElementsByClassName("num1")[0].innerHTML = num1;
        document.getElementsByClassName("num2")[0].innerHTML = num2;

        var geojson = {};
        geojson['type'] = 'FeatureCollection';
        geojson['features'] = [];
        var geojson1 = {};
        geojson1['type'] = 'FeatureCollection';
        geojson1['features'] = [];
        var geojson2 = {};
        geojson2['type'] = 'FeatureCollection';
        geojson2['features'] = [];
        var geojson3 = {};
        geojson3['type'] = 'FeatureCollection';
        geojson3['features'] = [];
        var geojson4 = {};
        geojson4['type'] = 'FeatureCollection';
        geojson4['features'] = [];
        var geojson5 = {};
        geojson5['type'] = 'FeatureCollection';
        geojson5['features'] = [];
        var geojson6 = {};
        geojson6['type'] = 'FeatureCollection';
        geojson6['features'] = [];


        // var max = 100;
        // if (i > max)
        //   i = max;
        var firstTime = true;
        var a,b = 0; 
        for (j = num1; j <= num2; j++) {
          if(firstTime) {
            a = dataSet[j][9];
            b = dataSet[j][8];
            firstTime = false;
          }
          if (parseFloat(dataSet[j][8]) != NaN && parseFloat(dataSet[j][9]) != NaN){
            var newFeature = {
              "type": "Feature",
              "properties": {
                "name": '<b>Đường</b>: ' + dataSet[j][1] 
                      + '<br>' + '<b>Phường</b>: ' + dataSet[j][2]
                      + '<br>' + '<b>Quận</b>: ' + dataSet[j][3]
                      + '<br>' + '<b>Thành Phố</b>: ' + dataSet[j][4]
                      + '<br>' + '<b>Giá</b>: ' + dataSet[j][5]
                      + '<br>' + '<b>Loại bất động sản</b>: ' + dataSet[j][6]
                      + '<br>' + '<b>Giá Tối Thiểu</b>: ' + dataSet[j][7]
              },
              "geometry": {
                "type": "Point",
                "coordinates": [parseFloat(dataSet[j][8]), parseFloat(dataSet[j][9])]
              }
            }
            geojson['features'].push(newFeature);
            
            var banks = dataSet[j][10].split(',');

            var subArray = [];
            for (var n = 1; n < banks.length; n++){
                if (banks[n] == 'bank'){
                  var name = subArray[0]
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature1 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'bank'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson1['features'].push(newFeature1);
                subArray = [];
                }
                else
                  subArray.push(banks[n]);
            }

            var hospital = dataSet[j][11].split(',');

            subArray = [];
            for (var n = 1; n < hospital.length; n++){
                if (hospital[n] == 'hospital'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature2 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'bank'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson2['features'].push(newFeature2);
                subArray = [];
                }
                else
                  subArray.push(hospital[n]);
            }

            var school = dataSet[j][12].split(',');

            subArray = [];
            for (var n = 1; n < school.length; n++){
                if (school[n] == 'school' || school[n] == 'primary_school' || school[n] == 'secondary_school'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature3 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'school'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson3['features'].push(newFeature3);
                subArray = [];
                }
                else
                  subArray.push(school[n]);
            }

            subArray = [];
            for (var n = 1; n < bus.length; n++){
                if (bus[n] == 'bus-station'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature4 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'school'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson4['features'].push(newFeature4);
                subArray = [];
                }
                else
                  subArray.push(bus[n]);
            }

            var market = dataSet[j][14].split(',');
            subArray = [];
            for (var n = 1; n < market.length; n++){
                if (market[n] == 'market'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature5 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'market'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson5['features'].push(newFeature5);
                subArray = [];
                }
                else
                  subArray.push(market[n]);
            }

            var spmarket = dataSet[j][15].split(',');
            subArray = [];
            for (var n = 1; n < spmarket.length; n++){
                if (spmarket[n] == 'supermarket'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature6 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'supermarket'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson6['features'].push(newFeature6);
                subArray = [];
                }
                else
                  subArray.push(spmarket[n]);
            }

          }
        }
        maptimes = geojson;
        console.log(maptimes);
        banktimes = geojson1;
        console.log(banktimes);
        hospitaltimes = geojson2;
        console.log(hospitaltimes);
        schooltimes = geojson3;
        console.log(schooltimes);
        bustimes = geojson4;
        console.log(bustimes);
        markettimes = geojson5;
        console.log(markettimes);
        spmarkettimes = geojson6;
        console.log(spmarkettimes);
        map.remove();
       $("#map").html("");
       $("#preMap").empty();
       $( "<div id=\"map\"></div>" ).appendTo("#preMap");
       drawsurrounding(0,2,null,a,b);
}

function Myfunction2(){
        var num1 = document.getElementsByClassName("num1")[0].innerHTML;
        var num2 = document.getElementsByClassName("num2")[0].innerHTML;
        if (num2 > 10){
          num1 = parseInt(num1) - 10;
          num2 = parseInt(num2) - 10;
        }
        
        if (num2 < 10){
          num2 = 9;
          num1 = 0;
          i++;
        }

        document.getElementsByClassName("num1")[0].innerHTML = num1;
        document.getElementsByClassName("num2")[0].innerHTML = num2;

        var geojson = {};
        geojson['type'] = 'FeatureCollection';
        geojson['features'] = [];
        var geojson1 = {};
        geojson1['type'] = 'FeatureCollection';
        geojson1['features'] = [];
        var geojson2 = {};
        geojson2['type'] = 'FeatureCollection';
        geojson2['features'] = [];
        var geojson3 = {};
        geojson3['type'] = 'FeatureCollection';
        geojson3['features'] = [];
        var geojson4 = {};
        geojson4['type'] = 'FeatureCollection';
        geojson4['features'] = [];
        var geojson5 = {};
        geojson5['type'] = 'FeatureCollection';
        geojson5['features'] = [];
        var geojson6 = {};
        geojson6['type'] = 'FeatureCollection';
        geojson6['features'] = [];


        // var max = 100;
        // if (i > max)
        //   i = max;
        var firstTime = true;
        var a,b = 0; 
        for (j = num1; j <= num2; j++) {
          if(firstTime) {
            a = dataSet[j][9];
            b = dataSet[j][8];
            firstTime = false;
          }
          if (parseFloat(dataSet[j][8]) != NaN && parseFloat(dataSet[j][9]) != NaN){
            var newFeature = {
              "type": "Feature",
              "properties": {
                "name": '<b>Đường</b>: ' + dataSet[j][1] 
                      + '<br>' + '<b>Phường</b>: ' + dataSet[j][2]
                      + '<br>' + '<b>Quận</b>: ' + dataSet[j][3]
                      + '<br>' + '<b>Thành Phố</b>: ' + dataSet[j][4]
                      + '<br>' + '<b>Giá</b>: ' + dataSet[j][5]
                      + '<br>' + '<b>Loại bất động sản</b>: ' + dataSet[j][6]
                      + '<br>' + '<b>Giá Tối Thiểu</b>: ' + dataSet[j][7]
              },
              "geometry": {
                "type": "Point",
                "coordinates": [parseFloat(dataSet[j][8]), parseFloat(dataSet[j][9])]
              }
            }
            geojson['features'].push(newFeature);

            var banks = dataSet[j][10].split(',');

            var subArray = [];
            for (var n = 1; n < banks.length; n++){
                if (banks[n] == 'bank'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature1 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'bank'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson1['features'].push(newFeature1);
                subArray = [];
                }
                else
                  subArray.push(banks[n]);
            }

            var hospital = dataSet[j][11].split(',');

            subArray = [];
            for (var n = 1; n < hospital.length; n++){
                if (hospital[n] == 'hospital'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature2 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'bank'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson2['features'].push(newFeature2);
                subArray = [];
                }
                else
                  subArray.push(hospital[n]);
            }

            var school = dataSet[j][12].split(',');

            subArray = [];
            for (var n = 1; n < school.length; n++){
                if (school[n] == 'school' || school[n] == 'primary_school' || school[n] == 'secondary_school'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature3 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'school'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson3['features'].push(newFeature3);
                subArray = [];
                }
                else
                  subArray.push(school[n]);
            }

            var bus = dataSet[j][13].split(',');

            subArray = [];
            for (var n = 1; n < bus.length; n++){
                if (bus[n] == 'bus-station'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature4 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'school'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson4['features'].push(newFeature4);
                subArray = [];
                }
                else
                  subArray.push(bus[n]);
            }

            var market = dataSet[j][14].split(',');
            subArray = [];
            for (var n = 1; n < market.length; n++){
                if (market[n] == 'market'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature5 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'market'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson5['features'].push(newFeature5);
                subArray = [];
                }
                else
                  subArray.push(market[n]);
            }

            var spmarket = dataSet[j][15].split(',');
            subArray = [];
            for (var n = 1; n < spmarket.length; n++){
                if (spmarket[n] == 'supermarket'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature6 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'supermarket'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson6['features'].push(newFeature6);
                subArray = [];
                }
                else
                  subArray.push(spmarket[n]);
            }

          }
        }
        maptimes = geojson;
        console.log(maptimes);
        banktimes = geojson1;
        console.log(banktimes);
        hospitaltimes = geojson2;
        console.log(hospitaltimes);
        schooltimes = geojson3;
        console.log(schooltimes);
        bustimes = geojson4;
        console.log(bustimes);
        markettimes = geojson5;
        console.log(markettimes);
        spmarkettimes = geojson6;
        console.log(spmarkettimes);
        map.remove();
       $("#map").html("");
       $("#preMap").empty();
       $( "<div id=\"map\"></div>" ).appendTo("#preMap");
       drawsurrounding(0,2,null,a,b);
}

var geojson = {};
geojson['type'] = 'FeatureCollection';
geojson['features'] = [];
var geojson1 = {};
geojson1['type'] = 'FeatureCollection';
geojson1['features'] = [];
var geojson2 = {};
geojson2['type'] = 'FeatureCollection';
geojson2['features'] = [];
var geojson3 = {};
geojson3['type'] = 'FeatureCollection';
geojson3['features'] = [];
var geojson4 = {};
geojson4['type'] = 'FeatureCollection';
geojson4['features'] = [];
var geojson5 = {};
geojson5['type'] = 'FeatureCollection';
geojson5['features'] = [];
var geojson6 = {};
geojson6['type'] = 'FeatureCollection';
geojson6['features'] = [];


var max = 10;
if (i < 10)
  max = i;
 
for (j = 0; j < max; j++) {
  if (parseFloat(dataSet[j][8]) != NaN && parseFloat(dataSet[j][9]) != NaN){
    var newFeature = {
      "type": "Feature",
      "properties": {
        "name": '<b>Đường</b>: ' + dataSet[j][1] 
            + '<br>' + '<b>Phường</b>: ' + dataSet[j][2]
            + '<br>' + '<b>Quận</b>: ' + dataSet[j][3]
            + '<br>' + '<b>Thành Phố</b>: ' + dataSet[j][4]
            + '<br>' + '<b>Giá</b>: ' + dataSet[j][5]
            + '<br>' + '<b>Loại bất động sản</b>: ' + dataSet[j][6]
            + '<br>' + '<b>Giá Tối Thiểu</b>: ' + dataSet[j][7]
      },
      "geometry": {
        "type": "Point",
        "coordinates": [parseFloat(dataSet[j][8]), parseFloat(dataSet[j][9])]
      }
    }
    geojson['features'].push(newFeature);
    
    var banks = dataSet[j][10].split(',');

    var subArray = [];
    for (var n = 1; n < banks.length; n++){
        if (banks[n] == 'bank'){
          var name = subArray[0];
          var addresss = subArray[1];
          for (var k = 2; k < subArray.length-2; k++)
            addresss = addresss + ',' + subArray[k];
          // alert(addresss)
          var newFeature1 = {
          "type": "Feature",
          "properties": {
            "name": 'Loại: ' + 'bank'
                + '<br>' + 'Tên: ' + name
                + '<br>' + 'Địa Chỉ: ' + addresss
          },
          "geometry": {
            "type": "Point",
            "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
          }
        }
        geojson1['features'].push(newFeature1);
        subArray = [];
        }
        else
          subArray.push(banks[n]);
    }
    var hospital = dataSet[j][11].split(',');

    subArray = [];
    for (var n = 1; n < hospital.length; n++){
        if (hospital[n] == 'hospital'){
          var name = subArray[0];
          var addresss = subArray[1];
          for (var k = 2; k < subArray.length-2; k++)
            addresss = addresss + ',' + subArray[k];
          // alert(addresss)
          var newFeature2 = {
          "type": "Feature",
          "properties": {
            "name": 'Loại: ' + 'hospital'
                + '<br>' + 'Tên: ' + name
                + '<br>' + 'Địa Chỉ: ' + addresss
          },
          "geometry": {
            "type": "Point",
            "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
          }
        }
        geojson2['features'].push(newFeature2);
        subArray = [];
        }
        else
          subArray.push(hospital[n]);
    }

    var school = dataSet[j][12].split(',');

    subArray = [];
    for (var n = 1; n < school.length; n++){
        if (school[n] == 'school' || school[n] == 'primary_school' || school[n] == 'secondary_school'){
          var name = subArray[0];
          var addresss = subArray[1];
          for (var k = 2; k < subArray.length-2; k++)
            addresss = addresss + ',' + subArray[k];
          // alert(addresss)
          var newFeature3 = {
          "type": "Feature",
          "properties": {
            "name": 'Loại: ' + 'school'
                + '<br>' + 'Tên: ' + name
                + '<br>' + 'Địa Chỉ: ' + addresss
          },
          "geometry": {
            "type": "Point",
            "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
          }
        }
        geojson3['features'].push(newFeature3);
        subArray = [];
        }
        else
          subArray.push(school[n]);
    }

    var bus = dataSet[j][13].split(',');
    subArray = [];
    for (var n = 1; n < bus.length; n++){
        if (bus[n] == 'bus_station'){
          var name = subArray[0];
          var addresss = subArray[1];
          for (var k = 2; k < subArray.length-2; k++)
            addresss = addresss + ',' + subArray[k];
          // alert(addresss)
          var newFeature4 = {
          "type": "Feature",
          "properties": {
            "name": 'Loại: ' + 'bus_station'
                + '<br>' + 'Tên: ' + name
                + '<br>' + 'Địa Chỉ: ' + addresss
          },
          "geometry": {
            "type": "Point",
            "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
          }
        }
        geojson4['features'].push(newFeature4);
        subArray = [];
        }
        else
          subArray.push(bus[n]);
    }

    var market = dataSet[j][14].split(',');
    subArray = [];
    for (var n = 1; n < market.length; n++){
        if (market[n] == 'market'){
          var name = subArray[0];
          var addresss = subArray[1];
          for (var k = 2; k < subArray.length-2; k++)
            addresss = addresss + ',' + subArray[k];
          // alert(addresss)
          var newFeature5 = {
          "type": "Feature",
          "properties": {
            "name": 'Loại: ' + 'market'
                + '<br>' + 'Tên: ' + name
                + '<br>' + 'Địa Chỉ: ' + addresss
          },
          "geometry": {
            "type": "Point",
            "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
          }
        }
        geojson5['features'].push(newFeature5);
        subArray = [];
        }
        else
          subArray.push(market[n]);
    }

    var spmarket = dataSet[j][15].split(',');
            subArray = [];
            for (var n = 1; n < spmarket.length; n++){
                if (spmarket[n] == 'supermarket'){
                  var name = subArray[0];
                  var addresss = subArray[1];
                  for (var k = 2; k < subArray.length-2; k++)
                    addresss = addresss + ',' + subArray[k];
                  // alert(addresss)
                  var newFeature6 = {
                  "type": "Feature",
                  "properties": {
                    "name": 'Loại: ' + 'supermarket'
                        + '<br>' + 'Tên: ' + name
                        + '<br>' + 'Địa Chỉ: ' + addresss
                  },
                  "geometry": {
                    "type": "Point",
                    "coordinates": [parseFloat(subArray[subArray.length-1]), parseFloat(subArray[subArray.length-2])]
                  }
                }
                geojson6['features'].push(newFeature6);
                subArray = [];
                }
                else
                  subArray.push(spmarket[n]);
            }

  }
}
var maptimes = geojson;
var banktimes = geojson1;
var hospitaltimes = geojson2;
console.log(maptimes);
console.log(banktimes);
console.log(hospitaltimes);
var schooltimes = geojson3;
console.log(schooltimes);
var bustimes = geojson4;
console.log(bustimes);
var markettimes = geojson5;
console.log(markettimes);
var spmarkettimes = geojson6;
console.log(spmarkettimes);

</script>
<header>
  <div class="collapse bg-dark" id="navbarHeader">
    <div class="container">
      <div class="row">
        <div class="col-sm-8 col-md-7 py-4">
          <h4 class="text-white">Về Trang Web</h4>
          <p class="text-muted">Website cung cấp thông tin xác thật nhất về bất động sản !!!</p>
        </div>
        <div class="col-sm-4 offset-md-1 py-4">
          <h4 class="text-white">Liên Hệ</h4>
          <ul class="list-unstyled">
          	<!--
            <li><a href="#" class="text-white">Follow on Twitter</a></li>
            <li><a href="#" class="text-white">Like on Facebook</a></li>
            <li><a href="#" class="text-white">Email me</a></li>
        	-->
          </ul>
        </div>
      </div>
    </div>
  </div>
  <div class="navbar navbar-dark bg-dark shadow-sm">
    <div class="container d-flex justify-content-between">
      <a href="#" class="navbar-brand d-flex align-items-center">
      	<!--
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" aria-hidden="true" class="mr-2" viewBox="0 0 24 24" focusable="false"><path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"/><circle cx="12" cy="13" r="4"/></svg>-->
        <img src="assets/image/home_gray.svg" width="50" style="fill: white;" alt="logo">&nbsp;
        <strong>Crawl</strong>
      </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarHeader" aria-controls="navbarHeader" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
    </div>
  </div>
</header>

<main role="main">

	<!--jumbotron-->
  <section class="text-center">
  	<!--
    <div class="container">
      
    </div>
	-->
    <div class="col-lg-12 col-sm-12">
    <div class="card hovercard">
        <div class="card-background">
            <img class="card-bkimg" alt="" src="assets/image/green.jpg">
            <!-- http://lorempixel.com/850/280/people/9/ -->
        </div>
        <div class="useravatar">
            <img alt="" src="assets/image/fbLogo.png">
        </div>
        <div class="card-info"> <span class="card-title">Mogi Facebook</span>

        </div>
    </div>
    <div class="btn-pref btn-group btn-group-justified btn-group-lg" role="group" aria-label="...">
        <div class="btn-group btn-size" role="group">
            <a id="stars" class="btn btn-primary" href="/"><span class="glyphicon glyphicon-star" aria-hidden="true"></span>
                <div class="hidden-xs">Bản Đồ Phổ Biến</div>
            </a>
        </div>
        <div class="btn-group btn-size" role="group">
            <a id="favorites" class="btn btn-default" href="/chart"><span class="glyphicon glyphicon-heart" aria-hidden="true"></span>
                <div class="hidden-xs">Biểu Đồ Dự Đoán</div>
            </a>
        </div>
        <div class="btn-group btn-size" role="group">
          <!--
            <a type="button" id="following" class="btn btn-default" href="/datatable" data-toggle="tab"><span class="glyphicon glyphicon-user" aria-hidden="true"></span>
                <div class="hidden-xs">Danh Sách Người Dùng</div>
            </a>
          -->
           <a id="following" class="btn btn-default" href="/datatable" ><span class="glyphicon glyphicon-user" aria-hidden="true"></span>
                <div class="hidden-xs">Danh Sách Người Dùng</div>
            </a>
        </div>
    </div>

        <div class="well">
      <div class="tab-content" style="text-align: justify;">
        <div  class="tab-pane fade in active show" id="tab1">

          <form method = "get">
            <div class="select-box">  
              <input type="text" id="textsr" name="textsrc" placeholder="{{ textsrc }}">
              <div class="district">
              <select name = "district">
                {{#if district}}
                  <option value="" data-display="{{ district }}">---</option>
                {{else}}
                  <option value="" data-display="Chọn Quận">---</option>
                {{/if}}
               <option value="quận 1">Quận 1</option>
               <option value="quận 2">Quận 2</option>
               <option value="quận 3">Quận 3</option>
               <option value="quận 4">Quận 4</option>
               <option value="quận 5">Quận 5</option>
               <option value="quận 6">Quận 6</option>
               <option value="quận 7">Quận 7</option>
               <option value="quận 8">Quận 8</option>
               <option value="quận 9">Quận 9</option>
               <option value="quận 10">Quận 10</option>
               <option value="quận 11">Quận 11</option>
               <option value="quận 12">Quận 12</option>
               <option value="thủ đức">Quận Thủ Đức</option>
               <option value="tân bình">Quận Tân Bình</option>
               <option value="gò vấp">Quận Gò Vấp</option>
               <option value="bình thạnh">Quận Bình Thạnh</option>
               <option value="phú nhuận">Quận Phú Nhuận</option>
               <option value="hóc môn">Quận Hóc Môn</option>
            </select>
            </div>
            <div class="realestate_type">
            <select name="type">
               {{#if type}}
                  <option value="" data-display="{{ type }}">---</option>
                {{else}}
                  <option value="" data-display="Loại bất động sản">---</option>
                {{/if}}
               <option value="xưởng">Xưởng</option>
               <option value="nhà">Nhà</option>
               <option value="phòng trọ">Phòng Trọ</option>
               <option value="căn hộ">Căn Hộ</option>
            </select>
            </div>
            <div class="price" >
            <div class="select-price" onclick="showprice();">
              <span>{{price}}</span>
            </div>
            <div class="slidecontainer">
              <input name="price" type="range" step = "1000000" min="0" max="300000000" value="{{price}}" class="slider" id="myRange">
              <p>Giá: <span id="demo"></span></p>
            </div>
            </div>
            </div> 
            <input class="submit" type="submit" value="Tìm Kiếm">
          </form> 
          <div class="checked-surrounding" id="checkbox-container">
            <form id="check-box">
              <input type="checkbox" name="check" onchange="
              if(this.checked == true)
                drawsurrounding(0, 1, this.value);
              else drawsurrounding(0, 0, this.value);
              "  value="bank">Ngân hàng
              <img src="/favicon/bank-icon.png" alt=""></input> </br>
              <input type="checkbox" name ="check" onchange="
              if(this.checked == true)
                drawsurrounding(1, 1, this.value);
              else drawsurrounding(1, 0, this.value);" value="hospital">Bệnh viên
              <img src="/favicon/hospital.png" alt=""></input> </br>
              <input type="checkbox" name ="check" onchange="
              if(this.checked == true)
                drawsurrounding(2, 1, this.value);
              else drawsurrounding(2, 0, this.value);" value="school">Trường học
              <img src="/favicon/school.png" alt=""></input> </br>
              <input type="checkbox" name ="check" onchange="
              if(this.checked == true)
                drawsurrounding(3, 1, this.value);
              else drawsurrounding(3, 0, this.value);" value="bus-station">Trạm xe bus
              <img src="/favicon/bus.png" alt=""></input> </br>
              <input type="checkbox" name ="check" onchange="
              if(this.checked == true)
                drawsurrounding(4, 1, this.value);
              else drawsurrounding(4, 0, this.value);" value="market">Chợ
              <img src="/favicon/cho.png" alt=""></input> </br>
              <input type="checkbox" name ="check" onchange="
              if(this.checked == true)
                drawsurrounding(5, 1, this.value);
              else drawsurrounding(5, 0, this.value);" value="supermarket">Siêu thị
              <img src="/favicon/spmarket.png" alt=""></input></br>
            </form>
          </div>
          <div class="navigation">

              <div class="number">
                  <span class="nav-num">
                    <span>
                    <span class="num1">0</span>
                     - 
                    <span class="num2">10</span>
                    </span>
                     trong số 
                    <span class="num_max"></span>
                  </span>
              </div>
              <div class="pre" onclick="Myfunction2();" role= "button">
                <span class="prev-button">&nbsp;</span>
                <img src="assets/image/prev.png">
              </div>
              <div class="next" onclick="Myfunction();" role= "button">
                <span class="next-button">&nbsp;</span>
                <img src="assets/image/next.jpg" >
              </div>
          </div>
            <div id="preMap">
              <div id="map"></div>
            </div>
              <script type="text/javascript">
            function initialize(banktimes = null, hospitaltimes = null, schooltimes = null, bustimes = null,markettimes = null,spmarkettimes = null, maptimes = null,a = 10.771462,b = 106.668694) {
                //var layers = ["terrain", "watercolor","toner"];


                    var terrain = new L.StamenTileLayer("terrain");
                    var watercolor = new  L.StamenTileLayer("watercolor");
                    var toner= new  L.StamenTileLayer("toner");

                    var bases = {
                        "Terrain":terrain,
                        "Watercolor":watercolor,
                        "Toner":toner


                    }

                    L.Map = L.Map.extend({
                                         openPopup: function(popup) {
                                         //        this.closePopup();  // just comment this
                                         this._popup = popup;

                                         return this.addLayer(popup).fire('popupopen', {
                                                                          popup: this._popup
                                                                          });
                                         }
                                         }); /***  end of hack ***/


                    var map = new L.Map('map', {
                                        center: [parseFloat(a), parseFloat(b)],
                                        zoom:13,
                                        layers:terrain
                                        })

                    var popmaps = function(feature,layer){
                        var popUp = feature.properties.name
                        layer.bindPopup(String(popUp));
                    }

                     L.control.layers(bases).addTo(map);

                     var myIcon = L.icon({
                        iconUrl: 'favicon/bank-icon.png',
                        iconSize: [35, 35],
                        // iconAnchor: [22, 94],
                        // popupAnchor: [-3, -76],
                        // shadowUrl: 'my-icon-shadow.png',
                        // shadowSize: [68, 95],
                        // shadowAnchor: [22, 94]
                    });

                     if(maptimes != null){
                      L.geoJson(maptimes, {
                                 pointToLayer:function (feature, latlng) {
                                 return L.marker(latlng, {

                                                     fillColor: "#000000",
                                                     color: "green",

                                                     opacity: 1,

                                                     });
                                 },
                                 onEachFeature:popmaps
                                 }).addTo(map);
                     }

                     if(banktimes != null){
                      L.geoJson(banktimes, {
                               pointToLayer:function (feature, latlng) {
                               return L.marker(latlng, {icon: myIcon} );
                               },
                               onEachFeature:popmaps
                               }).addTo(map);
                   }

                      var myIcon1 = L.icon({
                        iconUrl: 'favicon/hospital.png',
                        iconSize: [35, 35],              
                    });
                      if(hospitaltimes != null){
                      L.geoJson(hospitaltimes, {
                               pointToLayer:function (feature, latlng) {
                               return L.marker(latlng, {icon: myIcon1} );
                               },
                               onEachFeature:popmaps
                               }).addTo(map);
                   }
                   var myIcon2 = L.icon({
                        iconUrl: 'favicon/school.png',
                        iconSize: [35, 35],              
                    });
                      if(schooltimes != null){
                      L.geoJson(schooltimes, {
                               pointToLayer:function (feature, latlng) {
                               return L.marker(latlng, {icon: myIcon2} );
                               },
                               onEachFeature:popmaps
                               }).addTo(map);
                   }
                   var myIcon3 = L.icon({
                        iconUrl: 'favicon/bus.png',
                        iconSize: [25, 25],              
                    });
                      if(bustimes != null){
                      L.geoJson(bustimes, {
                               pointToLayer:function (feature, latlng) {
                               return L.marker(latlng, {icon: myIcon3} );
                               },
                               onEachFeature:popmaps
                               }).addTo(map);
                   }
                   var myIcon4 = L.icon({
                        iconUrl: 'favicon/cho.png',
                        iconSize: [30, 30],              
                    });
                      if(markettimes != null){
                      L.geoJson(markettimes, {
                               pointToLayer:function (feature, latlng) {
                               return L.marker(latlng, {icon: myIcon4} );
                               },
                               onEachFeature:popmaps
                               }).addTo(map);
                   }

                   var myIcon5 = L.icon({
                        iconUrl: 'favicon/spmarket.png',
                        iconSize: [30, 30],              
                    });
                      if(spmarkettimes != null){
                      L.geoJson(spmarkettimes, {
                               pointToLayer:function (feature, latlng) {
                               return L.marker(latlng, {icon: myIcon5} );
                               },
                               onEachFeature:popmaps
                               }).addTo(map);
                   }


            }

        </script>


        </div>
        <div class="tab-pane fade in" id="tab2">
<form action="#">
  <div class="select-box">  
    <label for="select-box1" class="label select-box1"><span class="label-desc">Chọn Quận</span> </label>
    <select id="select-box1" class="select">
	   <option value=”10″>Quận 10</option>
	   <option value=”2″>Quận 2</option>
	   <option value=”4″>Quận 4</option>
	   <option value=”7″>Quận 7</option>
	   <option value=”1″>Quận 1</option>
	</select>
  </div> 
</form>  
          <div><canvas id="myChart"></canvas></div>


        </div>
        <div class="tab-pane fade in" id="tab3">
 			<table id="example" class="display" width="100%"></table>
        </div>
      </div>
    </div>
</div>
  </section>
</main>

<footer class="text-muted">
  <div class="container">
    <p class="float-right">
      <a href="#">Quay Về Đầu Trang</a>
    </p>
    <!--
    <p>Album example is &copy; Bootstrap, but please download and customize it for yourself!</p>
    <p>New to Bootstrap? <a href="https://getbootstrap.com/">Visit the homepage</a> or read our <a href="/docs/4.3/getting-started/introduction/">getting started guide</a>.</p>
	-->
  </div>
</footer>
<script type="text/javascript" src="assets/js/jquery-3.4.1.min.js"></script>
<script type="text/javascript" src="assets/js/onlyChart.js"></script>
<script src="assets/js/jquery.dataTables.min.js" type="text/javascript"></script>
<script type="text/javascript" src="assets/js/custom.js"></script>
<script src="assets/js/bootstrap.bundle.min.js" integrity="sha384-xrRywqdh3PHs8keKZN+8zzc5TX0GRTLCcmivcbNJWm2rs5C8PRhcEn3czEjhAO9o" crossorigin="anonymous"></script>
<script src="assets/js/jquery-nice-select-1.1.0/js/jquery.js"></script> 
<script src="assets/js/jquery-nice-select-1.1.0/js/jquery.nice-select.js"></script>
<link rel="stylesheet" href="assets/js/jquery-nice-select-1.1.0/css/nice-select.css">

<script type="text/javascript">
    var list = [null,null,null,null,null,null];
    //var checked, value;
    function drawsurrounding(e, checked = 0 , value = null, x = dataSet[0][9], y = dataSet[0][8]){
         
        if(checked == 1)
          list[e] = value;
        else if(checked == 0)
        {
          if(list[e] != null)
          {
            list[e] = null;
          }
        }

          if(list[0] == 'bank')
            a = banktimes;
          else
            a = null;
          if(list[1] == 'hospital')
            b = hospitaltimes;
          else
            b = null;
          if(list[2] == 'school')
            c = schooltimes;
          else
            c = null;
          if(list[3] == 'bus-station')
            d = bustimes;
          else
            d = null;
          if(list[4] == 'market')
            e = markettimes;
          else
            e = null;
          if(list[5] == 'supermarket')
            f = spmarkettimes;
          else
            f = null;
          //console.log(d); 

         map.remove();
       $("#map").html("");
       $("#preMap").empty();
       $( "<div id=\"map\"></div>" ).appendTo("#preMap");  
        initialize(a, b, c, d, e, f, maptimes, x, y);
    }
    $(document).ready(function() {
        document.getElementsByClassName("num_max")[0].innerHTML = i;
        
        
        // if(document.getElementsByClassName("num2")[0].innerHTML = (document.getElementsByClassName("num2")[0].innerHTML - 1))
        // { 
        //     next.setAttribute("class", "hover");
        // }
        // var ele = document.getElementsByName("check");
        // console.log(ele)
        //     for(var n = 0; n < ele.length; n++) { 
        //         console.log(ele[0].checked)
        //         if(ele[n].checked == true){
        //           var result = ele[n].value;
        //         } 
        //     }
        // console.log(result)
        if((Array.isArray(dataSet) && dataSet.length))       
            initialize(null, null, null, null, null, null, maptimes,dataSet[0][9],dataSet[0][8]);
          else
            initialize();

        $(".btn-pref .btn").click(function () {
            $(".btn-pref .btn").removeClass("btn-primary").removeClass("active").addClass("btn-default");
            //$(".tab-pane").addClass("active"); // instead of this do the below 
            $(this).removeClass("btn-default").addClass("btn-primary");
            //$(this).tab('show');
        });
        $('select').niceSelect();
    });
//     $(function() {
//     $("input[type=\"radio\"]").click(function(){
//         var thisElem = $(this);
//         var value = thisElem.val();
//    //alert('value'+value);
//         localStorage.setItem("check", value);

//     });
//     var itemValue = localStorage.getItem("check");
//     if (itemValue !== null) {
//         $("input[value=\""+itemValue+"\"]").click();
//     }

// });

var slider = document.getElementById("myRange");
var output = document.getElementById("demo");
output.innerHTML = slider.value;

slider.oninput = function() {
  output.innerHTML = this.value;

}
var firstclick = true;
function showprice(){
  if(firstclick == true){
    document.getElementsByClassName("slidecontainer")[0].style.display = "block"; 
    firstclick = false;
  }
  else{
    document.getElementsByClassName("slidecontainer")[0].style.display = "none";
    firstclick = true;
  }
}
</script>
